# List of configuration options for tasks-gem5 and default values

# Do not modify this file, changes should be done in tasks-gem5.config

# What binaries and checkpoints should be built:
ENABLED_ARCHITECTURES=("x86_64" "aarch64") # TODO: ("x86_64" "aarch64" "riscv")
ENABLED_PROTOCOLS=("MESI_Three_Level" "MESI_Three_Level_HTM" "MESI_Three_Level_HTM_umu" "None") # The special "None" value can be used to build without protocol (TODO: actually with MI_example?)
ENABLED_BUILD_TYPES=("debug" "opt" "fast")

# Supported values for num_cpus (determines what boot checkpoints will be built) 
ENABLED_NUM_CPUS=(1 2 4 8 16)

# Additional build options (for scons, used for all binaries)
# Example: ADDITIONAL_BUILD_OPTIONS=("--ignore-style" "--with-permisive-kernel-panics")
ADDITIONAL_BUILD_OPTIONS=()

# Script that will be executed by the images after booting (path relative to $GEM5_ROOT)
BOOTSCRIPT="gem5_path/scripts/hack_back_ckpt_caps.rcS"


# Architecture specific configuration:

# base image filename (relative to $GEM5_ROOT/gem5_path/$ARCH/binaries/)
declare -A ARCH_BASE_IMAGE
ARCH_BASE_IMAGE=(
    ["x86_64"]="ubuntu-18-04.img" # "ubuntu_16_04.img" 
    ["aarch64"]="ubuntu-18.04-arm64-docker.img"
    ["riscv"]="TODO" # TODO
)

# kernel filename (relative to $GEM5_ROOT/gem5_path/$ARCH/binaries/)
declare -A ARCH_KERNEL
ARCH_KERNEL=(
    ["x86_64"]="vmlinux-5.4.49"
    ["aarch64"]="vmlinux.arm64"
    ["riscv"]="TODO" # TODO
)

# bootloader filename (relative to $GEM5_ROOT/gem5_path/$ARCH/binaries/)
# can be "" if not needed
declare -A ARCH_BOOTLOADER
ARCH_BOOTLOADER=(
    ["x86_64"]=""
    ["aarch64"]="boot_v2.arm64"
    ["riscv"]="TODO" # TODO
)

declare -A ARCH_MEMORY
ARCH_MEMORY=(
    ["x86_64"]="3GB"
    ["aarch64"]="3GB"
    ["riscv"]="3GB"
)

# device of the root partition
declare -A ARCH_ROOT_DEVICE
ARCH_ROOT_DEVICE=(
    ["x86_64"]="/dev/hda1"
    ["aarch64"]="/dev/sda1"
    ["riscv"]="TODO" # TODO
)

# extra architecture specific args
declare -A ARCH_EXTRA_OPTIONS
ARCH_EXTRA_OPTIONS=(
    ["x86_64"]=""
    ["aarch64"]="--machine-type=VExpress_GEM5_V2 --enable-tme"
    ["riscv"]=""
)


# Benchmarks


# Directory for benchmarks source (path relative to $GEM5_ROOT)
BENCHMARKS_ROOT_DIR="gem5_path/benchmarks"

# Filename prefix for the benchmarks crosscompilers
declare -A BENCHMARKS_ARCH_COMPILER_PREFIX
BENCHMARKS_ARCH_COMPILER_PREFIX=(
    ["x86_64"]=""
    ["aarch64"]="aarch64-linux-"
    ["riscv"]="riscv-linux-" # TODO
)

BENCHMARKS_DISK_IMAGE_SIZE=15G

declare -A BENCHMARKS_STAMP_ENABLED  # yes / no, built with crosscompiler or native
BENCHMARKS_STAMP_ENABLED=(
    ["x86_64"]=yes-native
    ["aarch64"]=yes-native
    ["riscv"]=yes-native
)
declare -A BENCHMARKS_MICROBENCHES_ENABLED  # yes-native / no, built with crosscompiler or native
BENCHMARKS_MICROBENCHES_ENABLED=(
    ["x86_64"]=yes-native
    ["aarch64"]=no # TODO
    ["riscv"]=no # TODO
)
declare -A BENCHMARKS_HTMBENCH_ENABLED  # yes-native / no, built with crosscompiler or native
BENCHMARKS_HTMBENCH_ENABLED=(
    ["x86_64"]=yes-native
    ["aarch64"]=no # TODO
    ["riscv"]=no # TODO
)
declare -A BENCHMARKS_PARSEC_ENABLED  # yes-native / yes-virtual / no, built with crosscompiler or virtual machine
BENCHMARKS_PARSEC_ENABLED=(
    ["x86_64"]=yes-native
    ["aarch64"]=yes-virtual
    ["riscv"]=no # TODO
)
declare -A BENCHMARKS_SPLASH3_ENABLED  # yes-native / no, built with crosscompiler or native
BENCHMARKS_SPLASH3_ENABLED=(
    ["x86_64"]=yes-native
    ["aarch64"]=no # TODO
    ["riscv"]=no # TODO
)

# Path to the HTM benchmarks root (absolute path or relative to $GEM5_ROOT)
BENCHMARKS_HTM_ROOT="${BENCHMARKS_ROOT_DIR}/benchmarks-htm"

# Benchmarks / STAMP

# Path to the HTM benchmarks root (absolute path or relative to $GEM5_ROOT)
BENCHMARKS_HTM_LIBS="${BENCHMARKS_HTM_ROOT}/libs"

# Path to the Stamp repository (absolute path or relative to $GEM5_ROOT)
BENCHMARKS_HTM_STAMP_DIR="${BENCHMARKS_HTM_ROOT}/stamp"

# “Flavours” of benchmark binaries that hould be built
BENCHMARKS_STAMP_FLAVOURS=("htm.empty" "htm.fallbacklock" "htm.sgl") # "htm.fallbacklock2phase"  "htm.sgl")

# Path to the microbenches repository (absolute path or relative to $GEM5_ROOT)
BENCHMARKS_HTM_MICROBENCHES_DIR="${BENCHMARKS_HTM_ROOT}/microbenches"

# “Flavours” of benchmark binaries that hould be built
BENCHMARKS_MICROBENCHES_FLAVOURS=("htm.empty" "htm.fallbacklock" "htm.sgl") # "htm.fallbacklock2phase"  "htm.sgl")

# Benchmarks / HTMBENCH

# Path to the HTMBENCH repository (absolute path or relative to $GEM5_ROOT)
BENCHMARKS_HTM_HTMBENCH_DIR="${BENCHMARKS_HTM_ROOT}/HTMBench"

# “Flavours” of benchmark binaries that hould be built
BENCHMARKS_HTMBENCH_FLAVOURS=("empty" "fallbacklock" "sgl" "powertm" "powertmplus") # "fallbacklock2phase" 

# Benchmarks / PARSEC

# Path to the Parsec repository (absolute path or relative to $GEM5_ROOT)
BENCHMARKS_PARSEC_DIR="${BENCHMARKS_ROOT_DIR}/parsec"

# Benchmarks / SPLASH3

# Path to the SPLASH3 repository (absolute path or relative to $GEM5_ROOT)
BENCHMARKS_SPLASH3_DIR="${BENCHMARKS_ROOT_DIR}/Splash-3"

# What compiler to use when building PARSEC in a virtual machine (system: use system GCC from the VM image, compile: build gcc in the virtual machine also, prebuilt: use a prebuilt compiler (TODO))
BENCHMARKS_PARSEC_COMPILER_VM="prebuilt"
declare -A BENCHMARKS_PARSEC_COMPILER_VM_PREBUILT_FILENAME
BENCHMARKS_PARSEC_COMPILER_VM_PREBUILT_FILENAME=(
    ["x86_64"]="" # TODO
    ["aarch64"]="gem5_path/aarch64/other/gcc-11.3.0-aarch64-linux-native.tar.xz"
    ["riscv"]="" # TODO
)
